from django.urls import path, include
from django.db.models import Model
from rest_framework.routers import DefaultRouter
from .views import *
from Feedback.views import *
from drf_spectacular.views import SpectacularAPIView

class ScheduleViewSet(AutoGeneratedViewSet):
    pass

router = DefaultRouter()
router.register(r'machines', MachineViewSet, basename="customMachine")
router.register(r'bearinglocations', BearingLocationViewSet, basename="customBearingLocation")
router.register(r'user', UserViewSet, basename="customUser")
router.register(r'alertlimits', AlertLimitsViewSet, basename="alertLimits")
models_list = apps.get_models()
excluded_models = ['logentry', 'contenttype', 'session', 'permission', 'group']
registered_models = set()
for model in models_list:
    if issubclass(model, Model):
        model_name = model.__name__.lower()
        if model_name not in excluded_models and model_name not in registered_models:
            try:
                viewset = globals()[f'{model_name}ViewSet']
                router.register(model_name, viewset, basename=model_name)
                registered_models.add(model_name)
            except KeyError:
                print(f"KeyError for {model_name}ViewSet - ViewSet not found")
                pass
        
urlpatterns = [
    path('', include(router.urls)),
    path('schema/', SpectacularAPIView.as_view(), name='schema'),
]

""" for url in urlpatterns:
    print(f"URL: {url}") """