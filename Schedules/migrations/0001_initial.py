# Generated by Django 5.1.8 on 2025-05-05 07:28

import django.db.models.deletion
import django_mongodb_backend.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Root', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyTaskSchedule',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(primary_key=True, serialize=False)),
                ('machineId', models.JSONField()),
                ('date', models.DateField()),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('customerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Root.customer')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Daily Task Schedule',
                'verbose_name_plural': 'Daily Task Schedules',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(primary_key=True, serialize=False)),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField()),
                ('frequency', models.IntegerField()),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Root.customer')),
            ],
        ),
        migrations.CreateModel(
            name='scheduleAlert',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('scheduleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_alert_id', to='Schedules.schedule')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleTask',
            fields=[
                ('id', django_mongodb_backend.fields.ObjectIdAutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('observation', models.TextField(blank=True)),
                ('priority', models.CharField(blank=True, max_length=255)),
                ('recommendation', models.TextField(blank=True)),
                ('approvalStatus', models.CharField(blank=True, max_length=255)),
                ('reportType', models.CharField(blank=True, max_length=255)),
                ('report', models.TextField(blank=True)),
                ('image', models.CharField(blank=True, max_length=255)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('customerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Root.customer')),
                ('machineId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Root.machine')),
                ('scheduleId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Schedules.schedule')),
                ('severityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Root.status')),
                ('technologyId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Root.technology')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
